А как проверить то, что гиперграф создался корректно, если не будет выдано явных ошибок?
Нужна система внутренней диагностики.


Сплит гиперграфа:
разбить на указанное число подграфов с равным числом вершин.
создать группы родственных ребер (по числу общих вершин) - реализовать метод, возвращающий число общих вершин у двух ребер
для вершин реализовать метод, возвращающий ссылку на смежные ребра (для облегчения поиска родственных)
включить максимально родственные группы в общий подграф, минимально родственные - в разные.
общая цель - включить в каждый подграф максимальное число гиперребер целиком.
Откладываю на потом такую оптимизацию, реализую случайное разбиение, и простое "затягивание" ребер в подграфы.
Для случайного нужно состояние принадлежности вершины подграфу, метод графа для подсчета числа внешних связей.
Метод просматривает ребра, считая число подграфов, в которые входят ребра.
Еще нужен метод для ребра, возвращающий число подграфов, в которые оно входит. Число внешних связей
равно этому числу -1 (при вхождении всех вершин в один подграф внешних связей 0).

Для "затягивания" нужно:
сам алгоритм затягивания - в цикле проходить по всем ребрам, затягивая в подграфы те из них, которые входят в 0 подграфов,
затем, когда заканчиваются такие, то в 1, 2, и т.д. до заполнения подграфов вершинами.
реализовать для одного подграфа.




Исследовать дихотомическое разбиение с критерием уменьшения общего времени обработки в шагах за счет распараллеливания

нужен метод, создающий новые ГГ на основе результатов разбиений
нужен конструктор подграфа с аргументами "массив вершин, число вершин (всех), номер ПГ"

т.к. ребра не зависят от подграфов, то надо скорректировать (или написать новый) метод расчета внешних связей для подграфов